name: Release Docker Image on GitHub

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
        description: "The tag to use for the release."
      version:
        required: true
        type: string
        description: "The project version to build. It should be equal to the version in the pom.xml file."

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Download and Release Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - name: Download App Image
        uses: actions/download-artifact@v5
        with:
          name: app-image
          path: ./target/
      - name: Prepare JPackage Image
        run: |
          mkdir -p ./target/jpackage-image/request-sink/
          unzip ./target/request-sink-${{ inputs.version }}.zip -d ./target/jpackage-image/request-sink/

      - name: Log in to the Container registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.tag }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
